syntax = "proto3";

package scatter.node.proto;

option go_package = "github.com/liyiysng/scatter/node/message/proto";

message MsgError{
	int32 Code = 1;
	string Describe = 2;
}

message Head{
    MsgType MsgType = 1; // 消息类型
    int32 Sequence = 2;// 请求时由客户端填充 , 回复时由服务器设置相同序列 
    string Service = 3;// 服务名称 如 Game.Foo
    MsgError Error = 4; // 自定义错误描述 货币不足等逻辑错误
    bytes Payload = 5;// 数据
}

message MsgHandShake{
    string Platform = 1;
    string ClientVersion = 2;
    string BuildVersion = 3;
		string UDID = 4; // 用户硬件设备号（用户硬件设备号--Android和iOS都用的uuid，32位通用唯一识别码）

		string Model = 5; // 设备的机型，例如Samsung GT-I9208
		string OsVersion = 6; // 操作系统版本，例如13.0.2
		string Network = 7; // 网络信息（4G/3G/WIFI/2G）。ps：不能区分移动新号就统一填2G吧

		string BSdkUDid = 10; // 用户硬件设备号（b服SDK udid，客户端SDK登录事件接口获取，32位通用唯一识别码）
		string BGameID = 11; // 游戏id（一款游戏的ID，类似app_id，b服SDK获得）
		string BChannelID = 12; // 游戏的渠道ID（游戏安装包的渠道ID）
		string BSkdTypeID = 13; // 客户端获取到的sdk_type（如果客户端拿不到BGameID，就填充该值，后端映射填充BGameID）
}

//消息类型
enum MsgType {
	// NULL 非法消息
	NULL = 0;
	// REQUEST 请求消息
	REQUEST = 1;
	// RESPONSE 回复消息
	RESPONSE = 2;
	// NOTIFY 通知消息 客户端=>服务器
	NOTIFY = 3;
	// PUSH 推送消息 服务器=>客户端
	PUSH = 4;
	// HEARTBEAT 心跳/ping 消息
	HEARTBEAT = 5;
	// HEARTBEATACK 心跳/ping 回复
	HEARTBEATACK = 6;
	// HANDSHAKE 握手消息
	HANDSHAKE = 7;
	// HANDSHAKEACK 握手消息回复
	HANDSHAKEACK = 8;
	// ERROR 错误消息 服务器=>客户端
	ERROR = 9;
    // KICK 剔除 , 客户端收到该消息应断开链接(服务器器主动断开会有 TIME_WAIT 问题)
    KICK = 10;

	LOCAL_CONNECTED = 20; //本地连接成功
	LOCAL_DISCONNECTED = 21; //本地连接断开
	LOCAL_TIMEOUT = 22; //本地超时
}